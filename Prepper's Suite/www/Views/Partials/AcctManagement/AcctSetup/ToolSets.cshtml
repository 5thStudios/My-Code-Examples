@inherits Umbraco.Web.Mvc.UmbracoViewPage<bl.Models.AcctSetupModel>


<div id="Step-ToolSets" class="step-panel" data-step="4">
    <h2>Tool Sets</h2>
    <div>
        <p>Zombie ipsum reversus ab viral inferno, nam rick grimes malum cerebro. De carne lumbering animata corpora quaeritis. Summus brains sit​​, morbo vel maleficia? De apocalypsi gorger omero undead survivor dictum mauris. Hi mindless mortuis soulless creaturas, imo evil stalking monstra adventus resi dentevil vultus comedat cerebella viventium. Qui animated corpse, cricket bat max brucks terribilem incessu zomby. The voodoo sacerdos flesh eater, suscitat mortuos comedere carnem virus. Zonbi tattered for solum oculi.</p>
    </div>
    <hr />
    <br />



    <div class="grid-x grid-padding-x">
        @for (int i = 0; i < Model.LstToolsets.Count(); i++)
        {

            <div class="cell large-12 tool-record" data-colorid="@Model.LstToolsets[i].ColorId" data-toolid="@Model.LstToolsets[i].ToolId">
                <div class="grid-x">
                    <div class="cell large-4 text-right">
                        <div class="tool-color" style="background-color:@Model.LstToolsets[i].ColorCode;">
                            <i class="fas fa-edit"></i>
                            @Html.HiddenFor(m => Model.LstToolsets[i].MemberToolId, new { @class = "memberToolId" })
                            @Html.HiddenFor(m => Model.LstToolsets[i].ToolId, new { @class = "toolId" })
                            @Html.HiddenFor(m => Model.LstToolsets[i].ColorId, new { @class = "colorId" })
                        </div>
                    </div>
                    <div class="cell large-1">&nbsp;</div>
                    <div class="cell large-8">
                        @Html.Label(Model.LstToolsets[i].Name, new { @class = "tool-name" })
                    </div>
                    <div class="cell large-8 ">
                        <div class="switch large">
                            @Html.CheckBoxFor(m => Model.LstToolsets[i].IsActive, new { @class = "switch-input" })
                            @Html.LabelFor(m => Model.LstToolsets[i].IsActive, "Active", new { @class = "switch-paddle" })
                        </div>
                    </div>
                    <div class="cell large-3">&nbsp;</div>
                </div>
            </div>

        }
    </div>

    <div class="popup">
        <div class="close-btn"> X </div>

        <div class="grid-x grid-padding-x">
            @foreach (var _color in Model.LstColors)
            {
                <div class="cell large-6">

                    <div class="color-box" style="background-color: @_color.ColorCode; color: #ffffff;" data-colorid="@_color.ColorId" data-colorname="@_color.ColorName" data-colorcode="@_color.ColorCode">
                        @_color.ColorName
                    </div>
                </div>
            }
        </div>
        <br />
    </div>

</div>




<style>
.tool-name { font-size: 20px; }
.tool-color { border: 1px solid gainsboro; color: #ffffff; padding: 2px 4px; font-size: 20px; }
.step-panel { position: relative; }
.step-panel .popup { display: none; position: absolute; width: 100%; border: 2px solid red; text-align: center; background-color: #ffffff; margin: auto auto; left: 0; right: 0; top: 0; padding: 0 20px; }
.step-panel .popup .close-btn { text-align: right; cursor: pointer; font-size: 22px; font-weight: 700; margin-right: 20px; margin-top: 10px; }
.step-panel .popup .color-box { padding: 8px 12px; margin: 0 auto; cursor: pointer; border: 1px solid gainsboro; }

.switch.large .switch-paddle { width: 10rem; height: 2.5rem; font-size: 1rem; text-align: center; padding-right: 20px; padding-top: 6px; }
.switch.large input:checked ~ .switch-paddle::after { left: 7.75rem; }
</style>

<script>
    //
    //========================================================
    jQuery(function ($) {
        var colorField = $('.step-panel .popup .color-box');
        var toolRecord = $('.tool-record');
        var toolColor = $('.tool-color');
        var popup = $('.step-panel .popup');
        var closeBtn = $('.step-panel .popup .close-btn');
        var currentRecordToSwap;
        var currentToolIdToSwap = '';
        var currentColorIdToSwap = '';
        var currentColorNameToSwap = '';
        var currentColorCodeToSwap = '';


        $(closeBtn).click(function () {
            popup.hide();
        })
        $(toolColor).click(function () {
            popup.show();

            //Obtain current record to swap
            currentRecordToSwap = $(this).parent();
            currentToolIdToSwap = $(this).find('input.toolId').val();
            currentColorIdToSwap = $(this).find('input.colorId').val();
            currentColorNameToSwap = $(this).find('label.colorName').html();
            currentColorCodeToSwap = $(this).css("background-color");

            console.clear();
            console.log("--toolColor--");
            console.log("currentToolIdToSwap: " + currentToolIdToSwap);
            console.log("currentColorIdToSwap: " + currentColorIdToSwap);
            console.log("currentColorNameToSwap: " + currentColorNameToSwap);
            console.log("currentColorCodeToSwap: " + currentColorCodeToSwap);
        })

        $(colorField).click(function () {
            console.clear();
            console.log("currentToolIdToSwap: " + currentToolIdToSwap);
            console.log("currentColorIdToSwap: " + currentColorIdToSwap);
            console.log("currentColorNameToSwap: " + currentColorNameToSwap);
            console.log("currentColorCodeToSwap: " + currentColorCodeToSwap);

            //Hide popup
            popup.hide();

            //Obtain selected data
            var selectedColorIdToSwap = $(this).data("colorid");
            var selectedColorNameToSwap = $(this).data("colorname");
            var selectedColorCodeToSwap = $(this).data("colorcode");
            console.log("--colorField--");
            console.log("selectedColorIdToSwap: " + selectedColorIdToSwap);
            console.log("selectedColorNameToSwap: " + selectedColorNameToSwap);
            console.log("selectedColorCodeToSwap: " + selectedColorCodeToSwap);

            //Obtain other record to swap
            if (selectedColorIdToSwap != currentColorIdToSwap) {
                var otherRecordToSwap = $('.tool-record[data-colorid="' + selectedColorIdToSwap + '"]')
                var otherToolColorPnl = $(otherRecordToSwap).find('.tool-color');
                var otherToolIdToSwap = $(otherToolColorPnl).find('input.toolId').val();
                var otherColorIdToSwap = $(otherToolColorPnl).find('input.colorId').val();
                var otherColorNameToSwap = $(otherToolColorPnl).find('label.colorName').html();
                var otherColorCodeToSwap = $(otherToolColorPnl).css("background-color");
                console.log("--otherRecord--");
                console.log("otherToolIdToSwap: " + otherToolIdToSwap);
                console.log("otherColorIdToSwap: " + otherColorIdToSwap);
                console.log("otherColorNameToSwap: " + otherColorNameToSwap);
                console.log("otherColorCodeToSwap: " + otherColorCodeToSwap);

                //Swap values in OTHER fields
                $(otherRecordToSwap).attr('data-colorid', currentColorIdToSwap);
                $(otherToolColorPnl).find('input.colorId').val(currentColorIdToSwap);
                $(otherToolColorPnl).find('label.colorName').html(currentColorNameToSwap);
                $(otherToolColorPnl).css("background-color", currentColorCodeToSwap);

                //Swap values in CURRENT fields
                var currentToolColorPnl = $(currentRecordToSwap).find('.tool-color');
                $(currentRecordToSwap).attr('data-colorid', selectedColorIdToSwap);
                $(currentRecordToSwap).find('input.colorId').val(selectedColorIdToSwap);
                $(currentRecordToSwap).find('label.colorName').html(selectedColorNameToSwap);
                $(currentToolColorPnl).css("background-color", selectedColorCodeToSwap);

            }

        });
    });
</script>
