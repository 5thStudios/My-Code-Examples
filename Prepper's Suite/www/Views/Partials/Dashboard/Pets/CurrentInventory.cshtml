@inherits Umbraco.Web.Mvc.UmbracoViewPage<bl.Models.Inventory>


<div class="grid-x grid-padding-x">
    <div class="cell large-15">
        <h3>Current Inventory</h3>
        <h6><strong>Item Count: </strong>@Model.LstItems.Count()</h6>
    </div>
    <div class="cell small-3">
        <br />
        <a id="btn-expand-all" class="button small expanded active ">Expand All</a>
    </div>
    <div class="cell small-3">
        <br />
        <a id="btn-collapse-all" class="button small expanded active ">Collapse All</a>
    </div>
    <div class="cell small-3">
        <br />
        <a id="btn-add-item" class="button small expanded">Add Item</a>
    </div>
</div>


@*<div class="grid-x grid-padding-x">
        <div class="cell small-3 text-right">
            Filter By
        </div>
        <div class="cell small-12">

            <div class="grid-x pnlFilterBy grid-padding-x small-up-4 medium-up-4 large-up-4">
                <div class="cell text-center">
                    <input type="radio" name="rbFilter" id="rbCategory01" value="" checked="checked" />
                    <label for="rbCategory01">Category 01</label>
                </div>
                <div class="cell text-center">
                    <input type="radio" name="rbFilter" id="rbCategory02" value="" />
                    <label for="rbCategory02">Category 02</label>
                </div>
                <div class="cell text-center">
                    <input type="radio" name="rbFilter" id="rbCategory03" value="" />
                    <label for="rbCategory03">Category 03</label>
                </div>
                <div class="cell text-center">
                    <input type="radio" name="rbFilter" id="rbCategory04" value="" />
                    <label for="rbCategory04">Category 04</label>
                </div>
            </div>

        </div>
    </div>
    <br />*@


<div class="grid-x grid-padding-x">
    <div class="cell">

        <br />
        <div class="grid-x">
            <div class="cell large-21 large-offset-3">
                <div class="grid-x" title="Description info to go here...">
                    <div class="cell large-11">
                        Item Name
                    </div>
                    <div class="cell large-6 text-center">
                        Expires
                    </div>
                    <div class="cell large-5">
                        Location
                    </div>
                </div>
            </div>
        </div>



        @using (Html.BeginUmbracoForm<www.Controllers.ToolsController>(bl.Models.Common.wwwAction.FormSubmit_CurrentInventory))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(m => m.MemberId)
            @Html.HiddenFor(m => m.AccountId)
            @Html.HiddenFor(m => m.ShowUpdateRecord)

            <div class="accordion">
                @{
                    foreach (string _categoryTitle in Model.LstCategoryTitles.Where(x => x != null).ToList())
                    {
                        <h5 class="category">
                            <span class="text">@_categoryTitle</span>
                        </h5>
                        <div class="content">
                            <div class="content-tree">
                                @foreach (var _item in Model.LstItems.Where(x => x.Category != null && x.Category.Name == _categoryTitle))
                                {
                                    @ForEachItem(_item);
                                }
                            </div>
                        </div>
                    }

                    if (Model.LstCategoryTitles.Contains(null))
                    {
                        <h5 class="category">
                            <span class="text">Uncategorized Items</span>
                        </h5>
                        <div class="content">
                            <div class="content-tree">
                                @foreach (var _item in Model.LstItems.Where(x => x.Category == null))
                                {
                                    @ForEachItem(_item);
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        }
    </div>
</div>



@helper ForEachItem(bl.EF.Item _item)
{
    Boolean _alreadyAdded = false;
    if (Model.LstDuplicateItems.Count > 0)
    {
        foreach (bl.Models.DuplicateItems _record in Model.LstDuplicateItems)
        {
            if (_record.ItemName == _item.Name)
            {
                if (_record.Category == _item.Category)
                {
                    _alreadyAdded = true;

                    if (!_record.IsCompleted)
                    {
                        @AddSubAccordion(_record)
                        _record.IsCompleted = true;
                        break;
                    }
                    continue;
                }
            }
        }
    }

    if (!_alreadyAdded)
    {
        @AddRecord(_item)
    }
}

@helper AddRecord(bl.EF.Item _item)
{
    <div class="content-item grid-x">
        <span class="cell shrink content-spacer"></span>
        <div class="cell auto content-text grid-container">

            <div class="grid-x">
                <div class="cell large-12">
                    @_item.Name
                    @if (_item.Volume.MeasurementTypeId != null || _item.Volume.Units != null)
                    {
                        <span>&nbsp;[</span>if (_item.Volume.Units != null)
                        {<span>@_item.Volume.Units </span>}
                    if (_item.Volume.MeasurementTypeId != null)
                    {<span>@_item.Volume.MeasurementType.Abbr</span>}<span>]</span>
            }
                </div>
                <div class="cell large-3 text-center">
                    @if (_item.ExpirationDate != null)
                    {<span>@Convert.ToDateTime(_item.ExpirationDate).ToString("MMM dd, yyyy") </span>}
                </div>
                <div class="cell large-2">
                    @if (_item.ExpirationDate <= DateTime.Today)
                    {
                        <span class="expired">
                            <i class="fas fa-exclamation-triangle"></i>
                        </span>
                    }
                    else if (_item.ExpirationDate <= DateTime.Today.AddMonths(1))
                    {
                        <span class="expiring">
                            <i class="fas fa-exclamation-triangle"></i>
                        </span>
                    }
                    @*else
                        {
                            <span class="not-expired">
                                <i class="fas fa-check-square"></i>
                            </span>
                        }*@
                </div>
                <div class="cell large-5 text-center">
                    @(_item.Location == null ? "" : _item.Location.Name)
                </div>
                <div class="cell large-1">
                    <button type="submit" name="btnUpdate" value="@_item.ItemId">
                        <i class="fas fa-pencil-alt"></i>
                    </button>
                </div>
                <div class="cell large-1">
                    <button type="submit" name="btnDelete" value="@_item.ItemId">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@helper AddSubAccordion(bl.Models.DuplicateItems _record)
{
    <div class="content-item grid-x subaccordion">
        <span class="cell shrink content-spacer"></span>
        <div class="cell auto content-text grid-container grouping">

            <div class="grid-x heading" data-isopen="false">
                <div class="cell">
                    <i class="fas fa-plus" aria-hidden="true"></i>
                    <i class="fas fa-minus" aria-hidden="true" style="display:none;"></i>
                    @_record.ItemName
                    (x@_record.Count.ToString())
                </div>
            </div>

            @foreach (bl.EF.Item _item in _record.LstItems)
            {
                <div class="grid-x record">
                    <div class="cell large-12"></div>
                    <div class="cell large-3 text-center">
                        @if (_item.ExpirationDate != null)
                        {<span>@Convert.ToDateTime(_item.ExpirationDate).ToString("MMM dd, yyyy") </span>}
                    </div>
                    <div class="cell large-2">
                        @if (_item.ExpirationDate <= DateTime.Today)
                        {
                            <span class="expired">
                                <i class="fas fa-exclamation-triangle"></i>
                            </span>
                        }
                        else if (_item.ExpirationDate <= DateTime.Today.AddMonths(1))
                        {
                            <span class="expiring">
                                <i class="fas fa-exclamation-triangle"></i>
                            </span>
                        }
                        @*else
                            {
                                <span class="not-expired">
                                    <i class="fas fa-check-square"></i>
                                </span>
                            }*@
                    </div>
                    <div class="cell large-5 text-center">
                        @(_item.Location == null ? "" : _item.Location.Name)
                    </div>
                    <div class="cell large-1">
                        <button type="submit" name="btnUpdate" value="@_item.ItemId">
                            <i class="fas fa-pencil-alt"></i>
                        </button>
                    </div>
                    <div class="cell large-1">
                        <button type="submit" name="btnDelete" value="@_item.ItemId">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            }

        </div>
    </div>
}