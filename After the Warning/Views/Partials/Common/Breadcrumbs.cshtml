@using Models;
@inherits UmbracoViewPage<IPublishedContent>


@{
    //Obtain page doctypes
    string doctype = Model.ContentType.Alias;
    string parentDoctype = string.Empty;
    if (doctype != Common.docType.Home)
    { parentDoctype = Model.Parent.ContentType.Alias; }


    //Determine which heading to display
    if (doctype == Common.docType.Home)
    {
        <h1>Welcome</h1>
    }
    else if (doctype == Common.docType.Search)
    {
        <h3>Results</h3>
    }
    else if (doctype == Common.docType.ManageAccount)
    {
        <nav class="breadcrumbs">
            <span class="divider">»</span>
            <a href="/" class="breadcrumb">Home</a>
        </nav>
    }
    else if (parentDoctype == Common.docType.ManageAccount)
    {
        <nav class="breadcrumbs">
            <span class="divider">»</span>
            <a href="/" class="breadcrumb">Home</a>
        </nav>
    }
    else
    {
        bool isFirst = true;

        <nav class="breadcrumbs">
            @if (Model.Ancestors().Count() == 1)
            {
                <span class="divider">»</span>
                <a href="/" class="breadcrumb">Home</a>
            }
            else
            {
                foreach (IPublishedContent ipCrumb in Model.Ancestors().OrderBy(x => x.Level).ToList())
                {
                    //Add crumb only if the page can be displayed in the menu.
                    if (ipCrumb.HasProperty(Common.NodeProperties.umbracoNaviHide) && ipCrumb.Value<bool>(Common.NodeProperties.umbracoNaviHide) == false)
                    {
                        //Only add divider after first entry
                        if (isFirst)
                        {
                            isFirst = false;
                            <span class="divider">»</span>
                            <a href="/" class="breadcrumb">Home</a>
                            <span class="divider">»</span>
                        }
                        else
                        {<span class="divider">»</span>}

                        //Add crumb navigation to screen
                        <a href="@ipCrumb.Url()" class="breadcrumb">@ipCrumb.Name</a>
                    }
                }
            }
        </nav>
    }
}
