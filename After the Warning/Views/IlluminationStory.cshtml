@using ContentModels = Umbraco.Web.PublishedModels;
@inherits UmbracoViewPage<ContentModels.IlluminationStory>
@{ Layout = "TopLevel.cshtml"; }



@{
    //Obtain page content
    Models.IlluminationStoryContent PgContent = Controllers.IlluminationController.ObtainIlluminationStoryContent(User, Umbraco, Html, Model);
    if (PgContent.RedirectHome) { Response.Redirect("/"); }
    else if (PgContent.Redirect)
    {
        Response.Redirect(PgContent.RedirectTo);
    }
}


<div id="pnlIlluminationStory" class="illuminationStory">
    <div class="grid-x grid-padding-x">
        <div class="cell large-14">
            <br class="show-for-small-only" />
            <h2>@PgContent.Title</h2>
            <h4>By: @Html.Raw(PgContent.MemberName)</h4>
            <br class="show-for-small-only" />
        </div>
        <div class="cell large-10 experiencePnl">
            <h5 class="text-center">
                @switch (PgContent.ExperienceType)
                {
                    case "Heavenly":
                        <img alt="" src="~/images/common/heavenly.png" />
                        break;
                    case "Hellish":
                        <img alt="" src="~/images/common/hellish.png" />
                        break;
                    case "Purgatorial":
                        <img alt="" src="~/images/common/purgatorial.png" />
                        break;
                    default:
                        <img alt="" src="~/images/common/other-unsure.png" />
                        break;
                }

                &nbsp;&nbsp;&nbsp;
                <strong>@PgContent.ExperienceType Experience</strong>
            </h5>

            <hr />
            @if (PgContent.CmMember.Age > 0)
            {
                <div class="grid-x grid-margin-x">
                    <div class="cell small-12 large-12 text-right dataType">
                        Age
                    </div>
                    <div class="cell small-12 large-12 text-left dataValue">
                        @PgContent.CmMember.Age.ToString() years young
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(PgContent.Gender))
            {
                <div class="grid-x grid-margin-x">
                    <div class="cell small-12 large-12 text-right dataType">
                        Gender
                    </div>
                    <div class="cell small-12 large-12 text-left dataValue">
                        @PgContent.Gender
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(PgContent.Religion))
            {
                <div class="grid-x grid-margin-x">
                    <div class="cell small-12 large-12 text-right dataType">
                        Religion
                    </div>
                    <div class="cell small-12 large-12 text-left dataValue">
                        @PgContent.Religion
                    </div>
                </div>
            }

            @if (!string.IsNullOrEmpty(PgContent.Country))
            {
                <div class="grid-x grid-margin-x">
                    <div class="cell small-12 large-12 text-right dataType">
                        Country
                    </div>
                    <div class="cell small-12 large-12 text-left dataValue">
                        @PgContent.Country
                    </div>
                </div>
            }

            @if (PgContent.CmMember.Race.FirstOrDefault() != null)
            {
                <div class="grid-x grid-margin-x">
                    <div class="cell small-12 large-12 text-right dataType">
                        Race
                    </div>

                    <div class="cell small-12 large-12 text-left dataValue">
                        @foreach (var race in PgContent.CmMember.Race)
                        {
                            @race <br />
                        }
                    </div>
                </div>
            }
            <br />
        </div>
    </div>

    <br />
    <p>@PgContent.Story</p>

    @*<div class="formulate-wrapper report-page">
        <input type="hidden" id="pageId" value="@Model.Id" />
        <input type="hidden" id="pageName" value="@Model.Name" />
        <input type="hidden" id="pageUrl" value="@Model.Url()" />

        <div class="formulate-wrapper">
            @Html.Action("Render", "FormulateRendering", new { form = PgContent.PickedForm })
            <script src="/App_Plugins/formulate/responsive.plain-javascript.min.js" async></script>
            <script src="/scripts/custom-formulate-script.js" async></script>
        </div>
    </div>*@
</div>