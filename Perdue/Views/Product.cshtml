@using Dragonfly.UmbracoHelpers
@using www.Models.PublishedModels;
@using ContentModels = www.Models.PublishedModels;
@using www.Models;
@using www.ViewModels;

@model ComposedPageViewModel<ContentModels.Product, ProductViewModel>
@{
    //Determine proper toplevel to use.
    if (Model.ViewModel.IsPerdue)
    {
        Layout = Common.Layout.TopLevelPER;
    }
    else if (Model.ViewModel.IsCheney)
    {
        Layout = Common.Layout.TopLevelCHE;
    }
    else if (Model.ViewModel.IsColeman)
    {
        Layout = Common.Layout.TopLevelCOL;
    }
}
@section Header {
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/lightgallery/1.3.2/css/lightgallery.css" />
}
@section Footer {
    <script type="text/javascript" src="/js/light/lightgallery.min.js"></script>
    <script type="text/javascript" src="/js/vendor/lg-zoom.js"></script>
}




<div class="Product">

    <div class="grid-container">
        <div class="grid-x">
            <div class="cell laptop-20 laptop-offset-2">
                <div class="grid-x grid-margin-x grid-padding-y align-bottom">
                    @if (Model.ViewModel.IsColeman)
                    {
                        <div class="cell">
                            <div class="product-code">Product Code: @Model.ViewModel!.ProductCode</div>
                            <h2>@Html.Raw(Model.ViewModel!.Title)</h2>
                        </div>
                    }
                    else
                    {
                        <div class="cell medium-18">
                            <div class="product-code">Product Code: @Model.ViewModel!.ProductCode</div>
                            <h2>@Html.Raw(Model.ViewModel!.Title)</h2>
                        </div>

                        <div class="cell medium-6 text-center medium-text-right">
                            @if (Model.ViewModel!.ProductBrand != null && Model.ViewModel!.ProductBrand.Logo != null & Model.ViewModel!.ProductBrand?.Logo?.Url() != "")
                            {
                                <img class="brand-logo" src="@Model.ViewModel!.ProductBrand?.Logo?.Url()" alt="@Model.ViewModel!.ProductBrand?.Name Logo">
                            }
                        </div>
                    }
                </div>
                <div class="grid-x grid-margin-x grid-padding-y">
                    <div class="product-photo-container cell medium-12">
                        <div class="product-photos">
                            <div class="lSSlideOuter ">
                                <div class="lSSlideWrapper usingCss">
                                    <ul id="imageGallery" class="lightSlider lSSlide">
                                        @foreach (var imgLink in Model.ViewModel.LstProductImgs)
                                        {
                                            <li data-thumb="@imgLink.Url" data-src="@imgLink.Url" class="lslide">
                                                <img src="/images/icons/magnifying-glass-solid.svg" class="svg-btn product-search-icon" />
                                                <img src="@imgLink.Url" class="lightSliderImg">
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>

                        @if (Model.ViewModel.LstProductImgs.Any())
                        {
                            <img src="@Model.ViewModel.LstProductImgs.First().Url" class="product-photo-print">
                        }

                    </div>
                    <div class="cell medium-12">
                        <div class="product-description-block">
                            @if (Model.ViewModel.LstAttributes.Any())
                            {
                                //Determine # of records to show per row
                                int count = 3;
                                if (Model.ViewModel.LstAttributes.Count() < 3) count = Model.ViewModel.LstAttributes.Count();

                                <div class="product-icon-group text-left laptop-text-center">
                                    <div class="text-center">
                                        @foreach (var _attribute in Model.ViewModel.LstAttributes)
                                        {
                                            <img src="/images/icons/square-check-solid.svg" class="svg-btn fa-circle-check" />
                                            <strong>@Html.Raw(_attribute)</strong>
                                            if (!_attribute.Equals(Model.ViewModel.LstAttributes.Last()))
                                            {
                                                <span>&nbsp;&nbsp;&nbsp;</span>
                                            }
                                        }
                                    </div>
                                </div>
                            }

                            <p>@Model.ViewModel.MarketingMessage</p>


                            @if (!string.IsNullOrEmpty(Model.ViewModel!.FeatureBenefit))
                            {
                                <h3 class="text-left prod-specs-head">Features & Benefits</h3>
                                <div class="pad-bullets">
                                    @Html.Raw(Model.ViewModel!.FeatureBenefit)
                                </div>
                            }

                            <div class="product-utility-divider"></div>

                            <div id="utility-nav" class="product-utilities">
                                <a class="print-btn" href="javascript:window.print()">
                                    @* <span class="fa fa-print" aria-hidden="true"></span> *@
                                    <img src="/images/icons/print-solid.svg" class="svg-btn utilities"> 
                                    Print
                                </a>
                                <a class="email-btn" href="@Model.ViewModel.EmailLink">
                                    @* <span class="fa fa-envelope" aria-hidden="true"></span> *@
                                    <img src="/images/icons/envelope-solid.svg" class="svg-btn utilities">
                                    Email</a>
                                @if (Model.ViewModel.ContactUs != null)
                                {
                                    <a class="contact-btn" href="@Model.ViewModel.ContactUs">
                                        @* <span class="fa fa-comment" aria-hidden="true"></span> *@
                                        <img src="/images/icons/comment-solid.svg" class="svg-btn utilities">
                                        Contact&nbsp;Us
                                    </a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @if (Model.ViewModel!.Call2Action.ShowCall2Action)
    {
        <partial name="@Common.Partial.Call2Action" model="Model.ViewModel!.Call2Action" />
    }


    <div class="product-specs ">
        <div class="grid-container">
            <div class="grid-x">
                <div class="cell laptop-20 laptop-offset-2">

                    <div class="grid-x grid-margin-x grid-padding-y">
                        <div class="cell medium-12 specs-printcol-a">
                            <h3 class="prod-specs-head">Ingredients</h3>
                            <p class="prod-specs-statement">@Model.ViewModel.IngredientStatement</p>
                            

                            <h3 class="prod-specs-head">Allergens</h3>
                            <div class="prod-specs-statement">
                                @if (Model.ViewModel.LstAllergens.Count() > 0)
                                {
                                    foreach (var _allergy in Model.ViewModel.LstAllergens)
                                    {
                                        <p>Contains @_allergy</p>
                                    }                                    
                                }
                                else
                                {
                                    <p>None</p>
                                }
                            </div>


                            <h3 class="prod-specs-head">Specifications</h3>
                            <table class="table">
                                @if (!string.IsNullOrEmpty(Model.ViewModel.Specification.ItemSize))
                                {
                                    <tr>
                                        <td class="prod-spectable-a">GTIN</td>
                                        <td class="prod-spectable-a">@Model.ViewModel.Specification.TradeUnitGtin</td>
                                    </tr>
                                    <tr>
                                        <td class="prod-spectable-b">Average Piece Size</td>
                                        <td class="prod-spectable-b">@Model.ViewModel.Specification.ItemSize</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td class="prod-spectable-b">GTIN</td>
                                        <td class="prod-spectable-b">@Model.ViewModel.Specification.TradeUnitGtin</td>
                                    </tr>
                                }


                                <tr>
                                    <td class="prod-spectable-a">Case Weight</td>
                                    <td class="prod-spectable-a">@Model.ViewModel.Specification.WeightInfo</td>
                                </tr>
                                <tr>
                                    <td class="prod-spectable-b">Max Case Weight</td>
                                    <td class="prod-spectable-b">@Model.ViewModel.Specification.MaxWeightInfo</td>
                                </tr>
                                <tr>
                                    <td class="prod-spectable-a">Case (L x W x H)</td>
                                    <td class="prod-spectable-a">
                                        @Model.ViewModel.Specification.Dimensions
                                    </td>
                                </tr>
                                <tr>
                                    <td class="prod-spectable-b">Case Cube</td>
                                    <td class="prod-spectable-b">@Model.ViewModel.Specification.CubeDimensions</td>
                                </tr>
                                <tr>
                                    <td class="prod-spectable-a">Cases per Pallet</td>
                                    <td class="prod-spectable-a">@Model.ViewModel.Specification.PerPallet</td>
                                </tr>
                                <tr>
                                    <td class="prod-spectable-b">Pallet Tie Hi</td>
                                    <td class="prod-spectable-b">@Model.ViewModel.Specification.PalletTieHie</td>
                                </tr>
                            </table>


                            <br>
                            <h3 class="prod-specs-head">Handling</h3>
                            <table class="table">
                                <tbody>
                                    <tr>
                                        <td class="prod-spectable-a">Cook Level</td>
                                        <td class="prod-spectable-a">@Model.ViewModel.Handling.Attribute</td>
                                    </tr>
                                    <tr>
                                        <td class="prod-spectable-b">Storage Method</td>
                                        <td class="prod-spectable-b">@Model.ViewModel.Handling.StorageMethod</td>
                                    </tr>
                                    <tr>
                                        <td class="prod-spectable-a">Storage Temperature</td>
                                        <td class="prod-spectable-a">@Model.ViewModel.Handling.productTempRange</td>
                                    </tr>
                                    <tr>
                                        <td class="prod-spectable-b">Shelf Life</td>
                                        <td class="prod-spectable-b">@Model.ViewModel.Handling.LifespanFromProduction.ToString() Days</td>
                                    </tr>
                                </tbody>
                            </table>

                            <br>
                        </div>
                        <div class="cell medium-12 specs-printcol-b">
                            <div class="product-nutrition-container">
                                <h3 class="prod-specs-head">Nutrition</h3>
                                <p class="serving-selector text-center">
                                    Serving&nbsp;&nbsp;
                                    <img src="/images/icons/toggle-on-solid.svg" class="svg-btn toggle fa-toggle-on hide" />
                                    <img src="/images/icons/toggle-off-solid.svg" class="svg-btn toggle fa-toggle-off" />
                                    &nbsp;&nbsp;100 Gram
                                </p>

                                <div id="nutrition-serving">
                                    <partial name="@Common.Partial.NutritionTable" model="@Model.ViewModel.PerServing" view-data='@new ViewDataDictionary(ViewData) { { "PerServing", true } }' />
                                </div>



                                <div id="nutrition-100gram">
                                    <partial name="@Common.Partial.NutritionTable" model="@Model.ViewModel.PerMeasure" view-data='@new ViewDataDictionary(ViewData) { { "PerServing", false } }' />
                                </div>

                            </div>

                            <div class="date-disclaimer">Specifications are current as of @Model.ViewModel.LastModified and are subject to change.</div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>