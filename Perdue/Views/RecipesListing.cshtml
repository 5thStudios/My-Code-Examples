@using Dragonfly.UmbracoHelpers
@using www.Models.PublishedModels;
@using ContentModels = www.Models.PublishedModels;
@using www.Models;
@using www.ViewModels;
@inject IPublishedValueFallback PublishedValueFallback
@model ComposedPageViewModel<ContentModels.RecipesListing, RecipesListingViewModel>
@{
    Layout = Common.Layout.TopLevelPER;
    ViewData["SearchQuery"] = Model.ViewModel?.SearchQuery;
}
@section Header {
    <!--JavaScript for Filtering -->
    <script type="text/javascript" src="/js/Isotope/isotope.pkgd.min.js"></script>
    <script type="text/javascript" src="/js/jquery/jquery.session.js"></script>
    <script type="text/javascript" src="/js/custom/Filters-RecipeListing.js"></script>
}


<div class="RecipesListing">
    <partial name="@Common.Partial.HeroCarousel" model="Model.Page?.HeroSlides" view-data='@new ViewDataDictionary(ViewData) { { "ipPage", Model.Page } }' />

    @if (Model.ViewModel!.Call2Action.ShowCall2Action)
    {
        <partial name="@Common.Partial.Call2Action" model="Model.ViewModel!.Call2Action" />
    }

    <div class="searchMenuIdeas">
        <div class="grid-container ">
            <div class="grid-x">
                <div class="cell">
                    <br>
                    <div class="grid-x">
                        <div class="cell medium-12">
                            <h2 class="text-center">Search Menu Ideas</h2>
                        </div>
                        <div class="cell medium-8">
                            <form action="/menu-ideas/" id="frmMenuIdeasSearch">
                                <div class="grid-x search-field">
                                    <div class="cell auto">
                                        <input class="form-control" type="text" name="recipekeyword" placeholder="keyword/product code" value="@ViewData["SearchQuery"]">
                                    </div>
                                    <div class="cell shrink">
                                        <button class="btn btn-secondary" type="submit">
                                            
                                            <img src="/images/icons/magnifying-glass-solid.svg" class="svg-btn" />
                                            </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                    <br>
                </div>
            </div>
        </div>
    </div>

    <div class="grid-container">
        <br>
        <div class="grid-x TwoColSidebar">
            <div class="cell medium-6">
                <partial name="@Common.Partial.RecipesListing_RenderFilters" model="Model.ViewModel" />
            </div>
            <div class="cell medium-18">
                @if (Model.ViewModel.HasSearchQuery)
                {
                    <h6><strong>@Model.ViewModel.LstRecipeListings.Count() Search Results for '@ViewData["SearchQuery"]'</strong></h6>
                    <br />
                }



                <partial name="@Common.Partial.RecipesListing_RenderRecipes" model="Model.ViewModel" />
                @* @Html.CachedPartial("~/Views/Partials/RecipesListing_RenderRecipes.cshtml", Model, 0, true, false, new ViewDataDictionary{ { "SearchKeyword", searchKw} }) *@
            </div>
        </div>
    </div>
    <br />
    <br />
    <br />





    @await Html.GetBlockGridHtmlAsync(Model.Page?.MainContent)
</div>